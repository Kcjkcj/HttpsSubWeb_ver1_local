events {
    worker_connections 1024;
}

http {
   #MIME 타입 설정 블록
    include mime.types;
    default_type application/octet-stream;
    # HTTP → HTTPS 리디렉션
    server {
        listen 80;
        server_name localhost;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name localhost;

        # 인증서 설정
        ssl_certificate /etc/ssl/certs/localhost.pem;
        ssl_certificate_key /etc/ssl/private/localhost-key.pem;

        # 보안 설정
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # 공통 헤더 설정
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # ✅ SpringBoot API 프록시 Nginx입장에서의 경로 매칭
        location /api/ {
            proxy_pass http://backend:8080;
        } #http://backend:8080/으로 하면 /api/ 가 중복되어서 나타남

        # ✅ React 정적 리소스 직접 처리
        location /static/ {
            alias /usr/share/nginx/html/static/;
            try_files $uri =404;
            expires 1y;
            add_header Cache-Control "public";
        }

        # ✅ 정적 리소스 직접 서빙 (MIME 오류 해결)
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|otf|map)$ {
            root /usr/share/nginx/html;
            expires 1y;
            add_header Cache-Control "public";
        }

        # ✅ React SPA (라우터 지원)
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }

        location /oauth2/ {
            proxy_pass http://backend:8080;
        }

        location /login/oauth2/ {
            proxy_pass http://backend:8080;
        }

        location ^~ /genre/ { #^~으로 genre의 .jpg 내용을 먼저 가로챔
            rewrite ^/genre/(.*)\+(.*)$ /genre/$1$20$2 last;

            alias /app/genre/;
            try_files $uri =404;
            expires 1y;
            add_header Cache-Control "public";
        }

    }
}
